

<%- include('templates/header',{css:["css/index.css"]}) %>

<!-- Include Bootstrap Icons if not already included -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<div class="d-flex gap-3 my-4 p-2">
  <!-- Meetings Button -->
  <a href="/connect/meetings" class="btn btn-outline-secondary d-flex align-items-center gap-2">
    <i class="bi bi-calendar-event"></i>
    Meetings
  </a>

  <!-- Another Action (e.g., Profile or Home) -->
  <a href="/create-profile" class="btn btn-outline-secondary d-flex align-items-center gap-2">
    <i class="bi bi-pencil"></i>
    Edit profile
  </a>

  <!-- Another Action (e.g., Profile or Home) -->
  <a href="/set-availability" class="btn btn-outline-secondary d-flex align-items-center gap-2">
    <i class="bi bi-pencil"></i>
    Edit Availability
  </a>
</div>



<%- include('templates/profile', {userData:userData}) %>

<div class="container py-5">
  <div class="row justify-content-center">
    <div class="col-12 col-md-8">

      <!-- Settings Header -->
      <div class="mb-4">
        <h1 class="mb-1">Settings</h1>

      </div>

      <!-- Availability Section -->
      <div class="card mb-5 shadow-sm">
        <div class="card-body">
          <h5 class="card-title">Your Location</h5>
          <p class="text-muted" id="city-display">Your city will display here</p>
        </div>
      </div>
      <!-- Availability Section -->
      <div class="card mb-5 shadow-sm">
        <div class="card-body">
          <h5 class="card-title">Availability</h5>
          <p class="text-muted">You can configure your availability here in the future.</p>
        </div>
      </div>

      <!-- Logout Button -->
      <div class="d-flex justify-content-center">
        <a href="/logout" class="btn btn-danger px-4" id="meet-btn">
          <i class="fas fa-sign-out-alt me-2"></i> Logout
        </a>
      </div>

    </div>
  </div>
</div>

<script>
  function getUserLocation() {
    console.log("Getting user location...");

    if ("geolocation" in navigator) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const { latitude, longitude } = position.coords;

          fetch(
            `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${latitude}&lon=${longitude}`
          )
            .then((response) => response.json())
            .then((data) => {
              const city =
                data.address.city ||
                data.address.town ||
                data.address.village ||
                data.address.county ||
                "Unknown";

              // Display the city in the HTML element
              document.getElementById("city-display").textContent = `${city}`;
            })
            .catch((error) => {
              console.error("Error during reverse geocoding:", error);
              document.getElementById("city-display").textContent =
                "Could not determine city.";
            });
        },
        (error) => {
          console.error("Error getting location:", error.message);
          document.getElementById("city-display").textContent =
            "Location access denied. Please allow location tracking.";
        }
      );
    } else {
      console.error("Geolocation is not supported by this browser.");
      document.getElementById("city-display").textContent =
        "Geolocation not supported.";
    }
  }
  console.log("file being called");

  getUserLocation();
</script>
<%- include('templates/footer', {currentPage:'account'}) %>